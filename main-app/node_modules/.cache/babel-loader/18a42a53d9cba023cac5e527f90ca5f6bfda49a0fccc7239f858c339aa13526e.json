{"ast":null,"code":"var _jsxFileName = \"/Users/shrivatsan/Documents/picanova/cloudflare-explorer/main-app/src/NewCollectiveData.js\";\nimport { useState } from 'react';\nimport React, { Component } from 'react';\nimport { format, parseISO } from \"date-fns\";\nimport moment from 'moment';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCollectiveData = props => {\n  const handleCollectiveClick = async () => {\n    if (startDate.getTime() > endDate.getTime()) {\n      setIsAlert(true);\n      setAlertMessage('Start Date cannot be greater than end date. Please set it accordingly.');\n    } else if ((endDate.getTime() - startDate.getTime()) / 1000 >= 259200) {\n      console.log(endDate.getTime() - startDate.getTime());\n      setIsAlert(true);\n      setAlertMessage('Range cannot be greater than 3 days. Please set it accordingly.');\n    } else {\n      setIsAlert(false);\n      setAlertMessage('');\n      setButtonClicked(true);\n      var startMonth = (\"0\" + (new Date(startDate).getMonth() + 1)).slice(-2);\n      var endMonth = (\"0\" + (new Date(endDate).getMonth() + 1)).slice(-2);\n      const mendDate = new Date(endDate).getFullYear().toString() + '-' + startMonth + '-' + (\"0\" + new Date(endDate).getDate()).slice(-2);\n      const mstartDate = new Date(startDate).getFullYear().toString() + '-' + endMonth + '-' + (\"0\" + new Date(startDate).getDate()).slice(-2);\n      setCollectiveData(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCollectiveClick,\n      children: \"Fetch collective data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_c = NewCollectiveData;\nexport default NewCollectiveData;\nvar _c;\n$RefreshReg$(_c, \"NewCollectiveData\");","map":{"version":3,"names":["useState","React","Component","format","parseISO","moment","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","NewCollectiveData","props","handleCollectiveClick","startDate","getTime","endDate","setIsAlert","setAlertMessage","console","log","setButtonClicked","startMonth","Date","getMonth","slice","endMonth","mendDate","getFullYear","toString","getDate","mstartDate","setCollectiveData"],"sources":["/Users/shrivatsan/Documents/picanova/cloudflare-explorer/main-app/src/NewCollectiveData.js"],"sourcesContent":["import {useState} from 'react';\nimport React, { Component }  from 'react';\nimport { format, parseISO } from \"date-fns\"\nimport moment from 'moment';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from \"chart.js\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nconst NewCollectiveData = (props) => {\nconst handleCollectiveClick = async () => {\n            if(startDate.getTime() > endDate.getTime()){\n                setIsAlert(true);\n                setAlertMessage('Start Date cannot be greater than end date. Please set it accordingly.');\n\n            }\n            else if(((endDate.getTime() - startDate.getTime())/(1000)) >= 259200 ){\n                console.log(endDate.getTime() - startDate.getTime())\n                setIsAlert(true);\n                setAlertMessage('Range cannot be greater than 3 days. Please set it accordingly.');\n            }\n            else{\n                setIsAlert(false);\n                setAlertMessage('');\n                setButtonClicked(true);\n                var startMonth = (\"0\" + (new Date(startDate).getMonth()  + 1)).slice(-2)\n                var endMonth = (\"0\" + (new Date(endDate).getMonth()  + 1)).slice(-2)\n                const mendDate = new Date(endDate).getFullYear().toString() + '-' + startMonth + '-' + (\"0\" + (new Date(endDate).getDate())).slice(-2)\n                const mstartDate = new Date(startDate).getFullYear().toString() + '-' + endMonth + '-' + (\"0\" + (new Date(startDate).getDate())).slice(-2)\n            setCollectiveData(true);\n            }\n\n}\n    return (\n      <p>{<button onClick={handleCollectiveClick}>Fetch collective data</button>}</p>\n    )\n}\n\nexport default NewCollectiveData;"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,IAAIC,SAAS,QAAS,OAAO;AACzC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,UAAU;AAC3C,OAAOC,MAAM,MAAM,QAAQ;AAE3B,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAEjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC;AAEtC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EACrC,MAAMC,qBAAqB,GAAG,YAAY;IAC9B,IAAGC,SAAS,CAACC,OAAO,EAAE,GAAGC,OAAO,CAACD,OAAO,EAAE,EAAC;MACvCE,UAAU,CAAC,IAAI,CAAC;MAChBC,eAAe,CAAC,wEAAwE,CAAC;IAE7F,CAAC,MACI,IAAI,CAACF,OAAO,CAACD,OAAO,EAAE,GAAGD,SAAS,CAACC,OAAO,EAAE,IAAG,IAAK,IAAK,MAAM,EAAE;MAClEI,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACD,OAAO,EAAE,GAAGD,SAAS,CAACC,OAAO,EAAE,CAAC;MACpDE,UAAU,CAAC,IAAI,CAAC;MAChBC,eAAe,CAAC,iEAAiE,CAAC;IACtF,CAAC,MACG;MACAD,UAAU,CAAC,KAAK,CAAC;MACjBC,eAAe,CAAC,EAAE,CAAC;MACnBG,gBAAgB,CAAC,IAAI,CAAC;MACtB,IAAIC,UAAU,GAAG,CAAC,GAAG,IAAI,IAAIC,IAAI,CAACT,SAAS,CAAC,CAACU,QAAQ,EAAE,GAAI,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MACxE,IAAIC,QAAQ,GAAG,CAAC,GAAG,IAAI,IAAIH,IAAI,CAACP,OAAO,CAAC,CAACQ,QAAQ,EAAE,GAAI,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MACpE,MAAME,QAAQ,GAAG,IAAIJ,IAAI,CAACP,OAAO,CAAC,CAACY,WAAW,EAAE,CAACC,QAAQ,EAAE,GAAG,GAAG,GAAGP,UAAU,GAAG,GAAG,GAAG,CAAC,GAAG,GAAI,IAAIC,IAAI,CAACP,OAAO,CAAC,CAACc,OAAO,EAAG,EAAEL,KAAK,CAAC,CAAC,CAAC,CAAC;MACtI,MAAMM,UAAU,GAAG,IAAIR,IAAI,CAACT,SAAS,CAAC,CAACc,WAAW,EAAE,CAACC,QAAQ,EAAE,GAAG,GAAG,GAAGH,QAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,GAAI,IAAIH,IAAI,CAACT,SAAS,CAAC,CAACgB,OAAO,EAAG,EAAEL,KAAK,CAAC,CAAC,CAAC,CAAC;MAC9IO,iBAAiB,CAAC,IAAI,CAAC;IACvB;EAEZ,CAAC;EACG,oBACE;IAAA,uBAAI;MAAQ,OAAO,EAAEnB,qBAAsB;MAAA,UAAC;IAAqB;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QAAK;AAErF,CAAC;AAAA,KA3BKF,iBAAiB;AA6BvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}