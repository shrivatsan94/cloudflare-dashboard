{"ast":null,"code":"var _jsxFileName = \"/Users/shrivatsan/Documents/picanova/cloudflare-explorer/main-app/src/CollectiveData.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React, { Component } from 'react';\nimport { format, parseISO } from \"date-fns\";\nimport moment from 'moment';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectiveData = props => {\n  _s();\n  const [collectiveData, setCollectiveData] = useState(false);\n  console.log(props.websiteList);\n  var startMonth = (\"0\" + (new Date(startDate).getMonth() + 1)).slice(-2);\n  var endMonth = (\"0\" + (new Date(endDate).getMonth() + 1)).slice(-2);\n  var startDate = props.startDate;\n  var endDate = props.endDate;\n  const mendDate = new Date(endDate).getFullYear().toString() + '-' + startMonth + '-' + (\"0\" + new Date(endDate).getDate()).slice(-2);\n  const mstartDate = new Date(startDate).getFullYear().toString() + '-' + endMonth + '-' + (\"0\" + new Date(startDate).getDate()).slice(-2);\n  ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n  props.websiteList.map(value => {\n    const options = {\n      indexAxis: \"x\",\n      elements: {\n        bar: {\n          borderWidth: 2\n        }\n      },\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"right\"\n        },\n        title: {\n          display: true,\n          text: `Page Views for ${value.split(',')[1]}`\n        }\n      }\n    };\n    const PAGEVIEWS_QUERY = `\nquery {\n  viewer {\n    zones(filter: { zoneTag: \"${value.split(',')[0]}\" }) {\n      httpRequests1hGroups(\n        filter: {\n          date_geq: \"${mstartDate}\",\n\t\t  date_leq: \"${mendDate}\"\n        }\n        limit: 1000\n        orderBy: [datetime_DESC]\n      ) {\n        datetime: dimensions{datetime}\n        sum {\n        \tpageViews\n        }\n      }\n    }\n  }\n}\n`;\n    const authorisationToken = \"Bearer \" + process.env.REACT_APP_authorisation_token;\n    const authorisationHeaders = {\n      'X-Auth-Email': process.env.REACT_APP_email_id,\n      'Authorization': authorisationToken,\n      'Content-Type': 'text/plain'\n    };\n    const response = fetch('http://localhost:8080/api.cloudflare.com:443/client/v4/graphql', {\n      method: 'POST',\n      headers: authorisationHeaders,\n      body: JSON.stringify({\n        query: PAGEVIEWS_QUERY\n      })\n    });\n    const result = response.json();\n    const mydata = {\n      labels: labels,\n      datasets: [{\n        label: \"Page Views\",\n        data: result.data.viewer.zones[0].httpRequests1hGroups.map(value => value.sum.pageViews),\n        borderColor: \"rgb(255, 99, 132)\",\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n      }]\n    };\n    const labels = result.data.viewer.zones[0].httpRequests1hGroups.map(value => value.datetime.datetime);\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: mydata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }, this);\n  });\n};\n_s(CollectiveData, \"h9F84mRZqLlgJrh3CRVzx+GRlps=\");\n_c = CollectiveData;\nexport default CollectiveData;\nvar _c;\n$RefreshReg$(_c, \"CollectiveData\");","map":{"version":3,"names":["useState","React","Component","format","parseISO","moment","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","CollectiveData","props","collectiveData","setCollectiveData","console","log","websiteList","startMonth","Date","startDate","getMonth","slice","endMonth","endDate","mendDate","getFullYear","toString","getDate","mstartDate","register","map","value","options","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","title","display","text","split","PAGEVIEWS_QUERY","authorisationToken","process","env","REACT_APP_authorisation_token","authorisationHeaders","REACT_APP_email_id","response","fetch","method","headers","body","JSON","stringify","query","result","json","mydata","labels","datasets","label","data","viewer","zones","httpRequests1hGroups","sum","pageViews","borderColor","backgroundColor","datetime"],"sources":["/Users/shrivatsan/Documents/picanova/cloudflare-explorer/main-app/src/CollectiveData.js"],"sourcesContent":["import {useState} from 'react';\nimport React, { Component }  from 'react';\nimport { format, parseISO } from \"date-fns\"\nimport moment from 'moment';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from \"chart.js\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nconst CollectiveData = (props) => {\n    const [collectiveData, setCollectiveData] = useState(false);\n    console.log(props.websiteList)\n    var startMonth = (\"0\" + (new Date(startDate).getMonth()  + 1)).slice(-2)\n    var endMonth = (\"0\" + (new Date(endDate).getMonth()  + 1)).slice(-2)\n    var startDate = props.startDate\n    var endDate = props.endDate\n    const mendDate = new Date(endDate).getFullYear().toString() + '-' + startMonth + '-' + (\"0\" + (new Date(endDate).getDate())).slice(-2)\n    const mstartDate = new Date(startDate).getFullYear().toString() + '-' + endMonth + '-' + (\"0\" + (new Date(startDate).getDate())).slice(-2)\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n    props.websiteList.map(value => {\n\n    const options = {\n      indexAxis: \"x\",\n      elements: {\n        bar: {\n          borderWidth: 2\n        }\n      },\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"right\"\n        },\n        title: {\n          display: true,\n          text: `Page Views for ${value.split(',')[1]}`\n        }\n      }\n    };\n\nconst PAGEVIEWS_QUERY = `\nquery {\n  viewer {\n    zones(filter: { zoneTag: \"${value.split(',')[0]}\" }) {\n      httpRequests1hGroups(\n        filter: {\n          date_geq: \"${mstartDate}\",\n\t\t  date_leq: \"${mendDate}\"\n        }\n        limit: 1000\n        orderBy: [datetime_DESC]\n      ) {\n        datetime: dimensions{datetime}\n        sum {\n        \tpageViews\n        }\n      }\n    }\n  }\n}\n`;\n\nconst authorisationToken = \"Bearer \" + process.env.REACT_APP_authorisation_token;\nconst authorisationHeaders = {\n            'X-Auth-Email': process.env.REACT_APP_email_id,\n            'Authorization': authorisationToken,\n            'Content-Type': 'text/plain'\n}\n      const response = fetch('http://localhost:8080/api.cloudflare.com:443/client/v4/graphql', {\n        method: 'POST',\n        headers: authorisationHeaders,\n          body: JSON.stringify({ query: PAGEVIEWS_QUERY })\n      });\n\n     const result = response.json();\n      const mydata = {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Page Views\",\n            data: result.data.viewer.zones[0].httpRequests1hGroups.map(value => value.sum.pageViews),\n            borderColor: \"rgb(255, 99, 132)\",\n            backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n          }\n        ]\n      };\n      const labels = result.data.viewer.zones[0].httpRequests1hGroups.map(value => value.datetime.datetime)\n    return (\n     <Bar options={options} data={mydata} />\n    )\n    })\n}\n\nexport default CollectiveData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}